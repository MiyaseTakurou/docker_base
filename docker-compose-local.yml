version: '3'
services:
  ################################
  ### web application
  ################################
  nginx:
    build:
      context: ./docker/nginx
      args:
        - NGINX_VERSION=${DOCKER_NGINX_VERSION}
    environment:
      - DOMAIN=${DOCKER_DOMAIN}
      - DOCUMENT_ROOT=${DOCKER_CONTAINER_DOCUMENT_ROOT}
      - HTTP_PORT=${DOCKER_HTTP_PORT}
      - HTTPS_PORT=${DOCKER_HTTPS_PORT}
    command: >
      /bin/sh -c
      "envsubst '
      $$DOCUMENT_ROOT
      $$DOMAIN
      $$HTTP_PORT
      $$HTTPS_PORT
      '< /etc/nginx/conf.d/default.conf.template
      > /etc/nginx/conf.d/default.conf
      && nginx -g 'daemon off;'"
    ports:
      - '${DOCKER_HTTP_PORT}:80'
      - '${DOCKER_HTTPS_PORT}:443'
    volumes:
      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d

  db:
    build:
      #context: ./docker/mysql
      context: ./docker/mariadb
      args:
        - MYSQL_VERSION=${DOCKER_MYSQL_VERSION}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      #- ./docker/data/mysql:/var/lib/mysql/
      #- ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      #- ./docker/mysql/sql/:/docker-entrypoint-initdb.d/
      - ./docker/data/mariadb:/var/lib/mysql/
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mariadb/sql/:/docker-entrypoint-initdb.d/
    ports:
      - ${DB_PORT}:3306
  ### ElasticSearch ########################################
  elasticsearch:
    build:
      context: ./docker/elasticsearch
      args:
        - ELK_VERSION=${DOCKER_ELK_VERSION}
    volumes:
      - ./docker/data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - cluster.name=docker-cluster
      - node.name=node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=laradock-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "${DOCKER_ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${DOCKER_ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"

  redis:
    build:
      context: ./docker/redis
      args:
        - REDIS_VERSION=${DOCKER_REDIS_VERSION}
    volumes:
      - ./docker/data/redis:/data
    ports:
      - '${DOCKER_REDIS_PORT}:6379'

  mongo:
    build: ./docker/mongo
    ports:
      - "${DOCKER_MONGODB_PORT}:27017"
    volumes:
      - ./docker/data/mongo:/data/db
      - ./docker/data/mongo_config:/data/configdb

  dynamodb:
    build:
      context: ./docker/dynamodb
      args:
        - DYNAMODB_VERSION=${DOCKER_DYNAMODB_VERSION}
    command: -jar DynamoDBLocal.jar -dbPath /home/dynamodblocal/data
    volumes:
      - "./docker/data/dynamodb:/home/dynamodblocal/data"

    ports:
      - ${DOCKER_DYNAMODB_PORT}:8000

  minio:
    build:
      context: ./docker/minio
    volumes:
      - ./docker/data//minio/data:/export
      - ./docker/data/minio/config:/root/.minio
    ports:
      - "${DOCKER_MINIO_PORT}:9000"
    environment:
      - MINIO_ACCESS_KEY=access
      - MINIO_SECRET_KEY=secretkey

  selenium:
    build: ./docker/selenium
    ports:
      - "${DOCKER_SELENIUM_PORT}:4444"
    volumes:
      - ./docker/data/shm:/dev/shm

  laravel-echo-server:
    build:
      context: ./docker/laravel-echo-server
    volumes:
      - ./docker/laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro
    ports:
      - "${DOCKER_LARAVEL_ECHO_SERVER_PORT}:6001"
    links:
      - redis

  mailhog:
    build: ./docker/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  php-fpm:
    build:
      context: ./docker/php-fpm
      args:
        - PHP_VERSION=${DOCKER_PHP_VERSION}
    volumes:
      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
      - ./docker/php-fpm/php.ini:/usr/local/etc/php/conf.d/zzmyphp.ini
      - ./docker/php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/zzxdebug.ini

  ################################
  ### Build tools
  ################################
  composer:
    build:
      context: ./docker/composer
      args:
        - COMPOSER_VERSION=${DOCKER_COMPOSER_VERSION}
    volumes:
      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
      - ./docker/php-cli/php.ini:/usr/local/etc/php/php.ini
    working_dir: ${DOCKER_CONTAINER_SRC_ROOT}

  artisan:
    build:
      context: ./docker/artisan
      args:
        - COMPOSER_VERSION=${DOCKER_COMPOSER_VERSION}
    volumes:
      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
      - ./docker/php-cli/php.ini:/usr/local/etc/php/php.ini
    working_dir: ${DOCKER_CONTAINER_SRC_ROOT}

  node:
    build:
      context: docker/node
      args:
        - NODE_VERSION=${DOCKER_NODE_VERSION}
    volumes:
      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
    working_dir: ${DOCKER_CONTAINER_SRC_ROOT}
    tty: true
    links :
      - nginx
    ports:
      - 3000:3000
      - 3001:3001

  #  npm:
  #    build:
  #      context: docker/npm
  #      args:
  #        - NODE_VERSION=${DOCKER_NODE_VERSION}
  #    volumes:
  #      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
  #    working_dir: ${DOCKER_CONTAINER_SRC_ROOT}
  #
  #  yarn:
  #    build:
  #      context: docker/yarn
  #      args:
  #        - NODE_VERSION=${DOCKER_NODE_VERSION}
  #    volumes:
  #      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
  #    working_dir: ${DOCKER_CONTAINER_SRC_ROOT}

  ################################
  #### testing
  ################################
  php-cli:
    build:
      context: ./docker/php-cli
      args:
        - PHP_VERSION=${DOCKER_PHP_VERSION}
    volumes:
      - ${DOCKER_APP_SRC_DIR}:${DOCKER_CONTAINER_SRC_ROOT}:cached
      - ./docker/php-cli/php.ini:/usr/local/etc/php/php.ini
    working_dir: ${DOCKER_CONTAINER_SRC_ROOT}

